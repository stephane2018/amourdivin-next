pipeline {
    agent any
    stages {
        stage('Checkout Code') {
            steps {
                git url: 'git@github.com:stephane2018/amourdivinclient.git', branch: 'deploy', credentialsId: 'ssh-jenkins-credentails'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker-compose build app'
            }
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    def version = env.BUILD_ID
                    sh "docker tag pipeline-amourdivin_app:latest pipeline-amourdivin_app:${version}"
                }
            }
        }
        stage('check if port is in user'){
            steps{
                sh "chmod +x check_port_and_stop_container.sh"
                sh "./check_port_and_stop_container.sh"
            }
        }
        stage('Deploy and execute') {
            steps {
                sh 'docker-compose up -d'
                sh 'docker run -d -p 3000:3000 pipeline-amourdivin_app'
            }
        }
        stage('delete old container'){
            steps{
                sh 'docker images | grep -v "^<none>" | grep -v "$(docker inspect --format '{{.Config.Image}}' <<< $(docker ps --quiet))" | docker rmi -f'
                sh 'docker image prune -a --force --filter "until=240h"'

            }
        }
        
    }
}
