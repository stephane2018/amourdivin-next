pipeline {
    agent any
    stages {
        stage('Checkout Code') {
            steps {
                git url: 'git@github.com:stephane2018/amourdivinclient.git', branch: 'deploy', credentialsId: 'ssh-jenkins-credentails'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker-compose build app'
            }
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    def version = env.BUILD_ID
                    sh "docker tag pipeline-amourdivin_app:latest pipeline-amourdivin_app:${version}"
                }
            }
        }
        stage('Clean Up (Optional)') {
            steps {
               sh '''
                images=$(docker images | grep -vE '^<none>|^REPOSITORY|latest$' | awk '{print $3}')
                '''
    
                if (!images.isEmpty()) {
                    echo "WARNING: The following images will be deleted:"
                    echo "$images"
    
                    // Prompt confirmation before deletion
                    confirm 'Are you sure you want to delete these images?'
    
                    if (confirm) {
                        echo "Deleting images..."
                        sh "docker rmi $images"
                    } else {
                        echo "Deletion cancelled."
                    }
                } else {
                    echo "No images found for deletion."
                }
            }
            
        } 
        stage('Deploy and execute') {
            steps {
                sh 'docker-compose up -d'
                sh 'docker run -d 3000:3000 pipeline-amourdivin_app'
            }
        }
        
        stage('remove unysed Images ') {
            steps {
                sh 'docker image prune'
            }
        }
    }
}
